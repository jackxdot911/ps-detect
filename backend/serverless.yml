# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: jack001
# "service" is the name of this project. This will also be added to your AWS resource names.
service: ps-detct

custom:
  userPoolId: "us-east-1_QH1VToZ5g"  
  userPoolClientId: "14ma5rh8sgopmni8hk8v074n3d"  

stages:
  default:
    params:
      tableName: "users-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x

  environment:
    USERS_TABLE: ${param:tableName}
    USER_POOL_ID: ${self:custom.userPoolId}
    USER_POOL_CLIENT_ID: ${self:custom.userPoolClientId}

  http:
    cors: true
    authorizers:
      cognito-auth:
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/${ssm:USER_POOL_ID}
        audience: ${ssm:USER_POOL_CLIENT_ID}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - s3:*
            - cognito-idp:*
            - ses:*
            - sqs:*
            - mobiletargeting:*
            - rds-data:*
            - secretsmanager:*
          Resource: "*"

functions:
  api:
    handler: handler.handler
    events:
      - httpApi:
          path: restricted
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${aws:region}:${aws:accountId}:userpool/${self:custom.userPoolId}

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}
